syntax = "proto3";

package register_credential;

import "proto/sevsnp.proto";

option go_package = "github.com/google/go-tpm-tools/proto/register_credential";

// Contains proof that the ak_pub is co-resident with an EK
message CertifiedBlob {
  // Attestation Key (AK) Public Area, encoded as a TPMT_PUBLIC
  bytes ak_pub = 1;
  // TPM2 certification, encoded as a TPMS_ATTEST
  bytes certify_info = 2;
  // TPM2 signature, encoded as a TPMT_Signature
  bytes raw_sig = 3;
}

// Contains all information needed to verify the binding from TPM EK to SNP
// Attestation report.
message SevSnpSvsmAttestation {
  sevsnp.Attestation sev_snp_attestation = 1;
  CertifiedBlob certified_blob = 2;
  // vTPM service manifest retrieved from configfs-tsm via manifest blob
  // Its format is defined by the SVSM spec
  bytes vtpm_service_manifest = 3;
}
